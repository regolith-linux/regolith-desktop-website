{"/ja/community/":{"data":{"":"","support-regolith#Support Regolith":"\nBecome a financial [contributor] and help us sustain our community ","お知らせ#お知らせ":" メーリングリストでリリースのお知らせを受け取る ","議論やヘルプ#議論やヘルプ":" GitHub Discussionsに参加してヘルプや議論をする RegolithデスクトップのMatrixスペースでコミュニティメンバーと会話する 既存のIssueや新規Issueでバグの報告や機能リクエストをする ","開発#開発":" Regolith GitHub orgで開発が行われています。 "},"title":"Community"},"/ja/docs/":{"data":{"":"","getting-started#Getting Started":" Install Regolith Basic Usage Configuration ","usefull-references#Usefull References":" Keybindings Config Files Xresources "},"title":"Documentation"},"/ja/docs/getting-started/":{"data":{"":"Explore the following sections to learn more about Regolith:\nUsing RegolithContent about how to use the Regolith Desktop How ToSome examples of how you can customize Regolith Linux ReferenceReference material "},"title":"Getting Started"},"/ja/docs/howtos/":{"data":{"":" このページはRegolith 1.xのWebサイトからコピーされたもので、Regolith 2のものに更新されていません。古い情報が含まれている可能性があります。 他の例やチュートリアルはGitHubのregolith-desktop wikiから利用することができます。 ","i3-wmユーザーガイド#i3-wmユーザーガイド":"インターフェースを最大限活用するため、共通のコマンドラインの機能を強化するには、i3ユーザーガイド（英語）で利用可能なオプションについて基本的な理解を持つことをオススメします。","ターミナルを使用する#ターミナルを使用する":"このセクションではRegolithをユーザーの必要なものに合わせて変更する方法の例を提供します。それらのほとんどは、コマンドをターミナルで入力して実行します。ターミナルを使うのが初めての場合や記憶をリフレッシュした場合は、Ubuntuのガイド（英語）を読むことをオススメします。その他に、linuxcommand.orgのチュートリアル（英語）ではさらに進んだ領域へ踏み込みます。"},"title":"ハウツー"},"/ja/docs/howtos/add-remove-blocklets/":{"data":{"":"","customize-bar#i3バーのカスタマイズ":"ステータスインジケーターの追加と削除 ステータスインジケーターの検索 apt search i3xrocks- ステータスインジケーターのインストール sudo apt install i3xrocks-memory regolith-look refresh i3バーのカスタマイズ バーにある各インジケーターはファイルで管理されます。バーのステータスインジケーターの位置に対応しています。例として、ファイル名が10_で始まるものは、 20_で始まる設定ファイルのインジケーターより前に配置されることを意味します。各ファイルの中には、i3xrocksがスクリプトを実行するために使用する情報があり、最終的にバーに表示されるデータを返します。いくつかのステータスインジケーターは設定パラメーターが存在し、ユーザーの好みに合わせることができます。例えば、バッテリーの状態を頻繁に変更するのがよい場合、調べる間隔を更新することができます。バーをカスタマイズするために最初にするべきことは、表示したいインジケーターを/usr/share/i3xrocks/conf.d/から~/.config/regolith3/i3xrocks/conf.dにコピーすることです。 ~/.config/regolith3/i3xrocks/conf.d内の各ファイルは好きなように変更できます。バーのステータスインジケーターを変更するには、ファイルの名前を好きな並び順に変更するだけです。\n変更を加えたあとは、セッションを再読み込みすることで、新しい設定ファイルに基づいてバーが更新されるはずです。\n例えば、バーにおけるバッテリーとトラフィックのブロックの変更と通知を非表示にしたいとき、以下の操作を行います。\n$ ls /usr/share/i3xrocks/conf.d/ 01_setup 30_net-traffic 80_battery 80_rofication 90_time $ mkdir -p ~/.config/regolith3/i3xrocks/conf.d $ cp /usr/share/i3xrocks/conf.d/01_setup ~/.config/regolith3/i3xrocks/conf.d/01_setup $ cp /usr/share/i3xrocks/conf.d/80_battery ~/.config/regolith3/i3xrocks/conf.d/30_battery $ cp /usr/share/i3xrocks/conf.d/30_net-traffic ~/.config/regolith3/i3xrocks/conf.d/80_net-traffic $ regolith-look refresh 上記の操作では、以下の操作が実行されます。\nRegolithが作成したディレクトリに存在する現在のi3xrocksモジュールが一覧表示されます ユーザー設定が存在するディレクトリに~/.config/regolith3/i3xrocks/conf.dが作成されます 3つのファイルが、アプリケーションが作成したディレクトリからユーザーが作成したディレクトリにコピーされます。これにより、この記事の冒頭で説明したようにユーザーがn_の番号を変更すると、順番が変更されます。 regolith-look refreshコマンドでバーステータスインジケーターの再読み込みが行われます 注意：ユーザーディレクトリの~/.config/regolith3/i3xrocks/conf.dに複数のブロック設定が存在する場合、既定である/usr/share/i3xrocks/conf.d/は無視されます。","さらに深く読み込む#さらに深く読み込む":"設定のリファレンスページには、Regolith Linuxを使うときの設定ファイルについての詳細な項目があります。","ステータスインジケーターの追加と削除#ステータスインジケーターの追加と削除":""},"title":"バーステータスインジケーターの変更"},"/ja/docs/howtos/customize-compositor/":{"data":{"":" 異常な視覚的不具合やグラフィックパフォーマンスの低下を経験している場合は、 このセクションに特に注意してください。 コンポジターは、ウィンドウをスクリーンに表示するときに仮想エフェクトを適用するUIコンポーネントです。 いくつかのデスクトップ環境ではコンポジターがウィンドウマネージャーに直接統合されており、 仮想エフェクトを切り替えたり無効にすることができます。 Regolithでは、コンポジターはパッケージングシステムで繋ぎ変え可能な“extension point”として定義されます。 これは、コンポジターを含むパッケージをインストールすることでコンポジターを切り替えることができるということを意味します。 基礎となるパッケージングシステムは競合が起きないことを確認し、 コンポジターを含めたすべての依存関係が インストールされていることを確認してください。\nRegolith 2.xでは、既定のコンポジターは\"コンポジターなし\"です。 Regolith 1.xでは、既定のコンポジターはPicomでした。 ","regolithの既定のコンポジター設定のオーバーライド#Regolithの既定のコンポジター設定のオーバーライド":"Compton/Picom 独自のCompton/Picomコンポジターの設定を提供するには、 既定値をコピーするか独自に用意し、~/.config/regolith3/picom/configに保存します。 次のセッションでは、既定の設定である/etc/regolith/picom/configの代わりに 読み込まれます。","コンポジターのインストール#コンポジターのインストール":" i3-wmでコンポジターを管理する方法により、コンポジターの変更をエフェクトに適用するため、 ログアウトしてから戻る必要があります。 i3の再起動では代替できません。 次のパッケージインストールコマンドを実行して、コンポジターを交換します。 picomをインストールする場合：\napt install regolith-compositor-picom 一度ログアウトして戻ってから新しいコンポジターを読み込みます。 プロセスのリストからpicomが動作していることを確認することができます：\nps aux | grep picom ","利用可能なコンポジターを探す#利用可能なコンポジターを探す":"Regolithで動作するすべてのコンポジター設定は、 以下のコマンドで一覧表示されます：\napt search regolith-compositor- 以下の項目を見つけることができます：\nregolith-compositor-none [既定]：コンポジターなし。 最高のパフォーマンス、仮想エフェクトなし。 regolith-compositor-picom-glx：picomを使用します。 画面のつなぎ目の解決や仮想エフェクトの追加するとき、多くのユーザーに推奨されます。comptonからフォークされ、モダンで管理されています。 Regolith 1.6の既定のコンポジターでした。 regolith-compositor-compton-glx：既にメンテナンスされていない、 picomの祖先です。 regolith-compositor-xcompmgr：初期のコンポジターで、より複雑なコンポジターに問題がある場合、 より安定したパフォーマンスを提供する可能性があります。 "},"title":"コンポジターのカスタマイズ"},"/ja/docs/howtos/customize-i3-configuration/":{"data":{"":"","regolithの既定を完全に置き換える方法#Regolithの既定を完全に置き換える方法":"Regolithの既定を保持したくない（例えば、あなたが完全な個人設定を使いたい経験豊富なi3ユーザーである）場合、すべてのRegolithの部分設定をアンインストールしたり、独自のRoot設定を~/.config/regolith3/i3/configに作成することができます。","xresourcesオプションの範囲を超えてregolithの既定を変更する方法#Xresourcesオプションの範囲を超えてRegolithの既定を変更する方法":"上記の記事の内容以上の設定が必要な場合は、設定ファイルのステージングをご覧ください。","xresources変数を設定する方法#\u003ccode\u003eXresources\u003c/code\u003e変数を設定する方法":"既定の設定は/usr/share/regolith/i3/config.dに保存されています。これらはアルファベット順に読み込まれます。次に、~/.config/regolith3/i3/config.dのユーザー設定がアルファベット順に読み込みまれます。Regolithの既定の設定はXresources値の設定や、ユーザー設定の追加や、aptによる既定の設定の追加・削除でカスタマイズできるように構築されています。これにより、Regolithではi3のカスタマイズ方法に、設定をクリーンにするため、個別に、もしくは組み合わせて使用できる複数のアプローチがあります。\nXresourcesによるキーバインド・文字列・プログラム名・色といった、オーバーライド値の使用 aptによるRegolithの既定ファイルを追加や削除 独自の設定ファイルの追加 Regolithの設定の大規模の置き換え Xresources変数を設定する方法 次の設定例（/usr/share/regolith/i3/config.d/80_compositor）より、$wm.program.compositorを設定することで、既存のi3設定ファイルを編集したりオーバーライドすることなく、使用したいコンポジターを読み込むようにカスタマイズすることができます。\nRegolithバージョン3.0ではXresourceキーが\"i3-wm\"から\"wm\"に置き換えられます。このページの内容はRegolith 3.0以降のものに更新されています。それ以前のバージョンを使用する場合は、キーの名前を\"wm\"から\"i3-wm\"として使用してください。例として、Regolith 1.xと2.xではwm.foo.barはi3-wm.foo.barに変更されます。 /usr/share/regolith/i3/config.d/80_compositorset_from_resource $wm.program.compositor wm.program.compositor /usr/share/regolith-compositor/init exec_always --no-startup-id $wm.program.compositor これを行うには、~/.config/regolith3/Xresourcesに以下の行を追加するだけでできます。\n~/.config/regolith3/Xresources# 自作のコンポジターを使用する wm.program.compositor: /usr/local/bin/my-compositor 同様に、/usr/share/regolith/i3/config.dのファイルを基にしたXresourcesで他のオプションのオーバーライドをすることもできます。\n~/.config/regolith3/Xresources## 間隔の設定 wm.gaps.inner.size: 1 ## 分割線の設定 wm.window.border.size: 3 wm.client.focused.color.child_border: #AAD3E9 ## ワークスペースの名前 wm.workspace.01.name: 1:FOO 詳しくは、Xresourcesに関するより詳細なディスカッションを参照してください。","既定の部分設定をアンインストールする方法#既定の部分設定をアンインストールする方法":"提供された既定の部分設定を全体的に置き換えたり削除したい場合、提供された部分をaptでパッケージとして削除することができます。\n削除したい部分設定を提供するパッケージの名前を特定するには次のコマンドを実行します。\ndpkg -S /usr/share/doc/regolith-i3-workspace-config 出力結果にパッケージの名前が含まれている場合：\nregolith-i3-workspace-config: /usr/share/doc/regolith-i3-workspace-config このパッケージで提供されるファイルの完全なリストを確認し、何を削除しようとしているのかわかっている場合：\ndpkg -L regolith-i3-workspace-config 部分設定を削除するには：\nsudo apt remove regolith-i3-workspace-config ","既定の部分設定をカスタマイズする方法#既定の部分設定をカスタマイズする方法":" Regolithの既定部分のみをカスタマイズする場合、~/.config/regolith3/i3/configファイルが存在しないことを確認してください。これはRegolithの既定をオーバーライドするため、このハウツーの内容と互換性がありません。 初めに、ユーザーの部分設定のディレクトリが存在することを確認します。\nmkdir -p ~/.config/regolith3/i3/config.d 次に、既定の設定を独自の設定ディレクトリにコピーします。\ncp /usr/share/regolith/i3/config.d/40_workspace-config ~/.config/regolith3/i3/config.d/ 希望に沿った変更を加えます。\nvim ~/.config/regolith3/i3/config.d/40_workspace-config 既定に含まれているパッケージをクリーンアップします。\nsudo apt remove regolith-i3-workspace-config 最後に、i3を再起動するか、ログアウトしてから戻ります。"},"title":"i3設定のカスタマイズ"},"/ja/docs/howtos/override-xres/":{"data":{"":"Regolithは、Xresourcesシステムに依存し、統合されたインターフェース設定を提供しています。Xresourcesの値を変更することで、Regolithは、ユーザーインターフェイスの更新、カスタム動作の指定、バーの一部のblockletの特定の形式の定義などの方法でカスタマイズできます。\nRegolithでは、Xresourcesの値は、独自のXresourcesファイルを用意する方法か、既存のXresourcesの値をオーバーライドする方法の2つの方法で変更できます。後者のアプローチは、Regolithが新しいバージョンにアップグレードする際にカスタマイズを妨げる可能性を下げるため、強く推奨されます。Xresourcesツリーを完全にコピーする場合、将来のバージョンで破損した変更を手動で統合する必要があります。 ","さらに深く読み込む#さらに深く読み込む":"Regolithの設定ファイルについて詳細については設定のリファレンスページを参照してください。","初期化#初期化":"Regolithセッションが開始されるとき、以下の順番でXresourcesが読み込まれます：\nファイル オプション 注意 ~/.Xresources Y Regolith以外の設定を対象にしています /usr/share/regolith-look/**/ N RegolithのXresourcesは外観と関連付けられています ~/.config/regolith3/Xresources Y 特定のオーバーライドをXresourcesの既定に適用します 冗長設定の指定を必要とせず、長期にわたって管理しやすいため、カスタマイズには~/.config/regolith3/Xresourcesを使用することを推奨します。","参考例#参考例":"以下のコマンドはファイルの最後にテキストを付け加えるため、コマンドを複数回実行すると、重複した入力が発生することに注意してください。\n例 - UIを高DPI画面に更新する ~/.config/regolith3/Xresourcesのオーバーライドファイルを使用する場合、変更したい値を指定するだけです。xrdbツールを使用して、現在の値を変更することもできます。\n~/.config/regolith3/Xresourcesファイルに次の値を作成もしくは追加する： ~/.config/regolith3/XresourcesXft.dpi: 192 Xresources設定を再読込する: regolith-look refresh 新規のターミナルを開き、変更が有効になっていることを確認する。 192は参考例の値であり、必要に応じて変更してください。\n例 - i3バーの位置を変更する $ xrdb -query | grep position wm.bar.position:\tbottom $ echo \"wm.bar.position:\ttop\" \u003e\u003e ~/.config/regolith3/Xresources $ regolith-look refresh 例 - GTKテーマを変更する $ xrdb -query | grep gtk gtk.theme_name:\tAyu-Mirage-Dark $ echo \"gnome.gtk.theme:\tAdwaita\" \u003e\u003e ~/.config/regolith3/Xresources $ regolith-look refresh 例 - システムトレイを無効にする echo \"wm.bar.trayoutput:\tnone\" \u003e\u003e ~/.config/regolith3/Xresources regolith-look refresh 例 - AltキーをWinキーの代わりにSuperキーとして使用する echo \"wm.mod: Mod1\" \u003e\u003e ~/.config/regolith3/Xresources echo \"wm.alt: Mod4\" \u003e\u003e ~/.config/regolith3/Xresources 次に、変更を有効にするため、i3を再読み込みします。i3が別のプロセスとして起動するものなど、一部の設定では、セッションに再ログインする必要があります。","変更可能な値の決定#変更可能な値の決定":"xrdbツールは既存のXresourcesの値をリスト表示するときに使用することができます。Regolith 2.1リリースには、いくつか既存のオーバーライドが存在します：\n$ xrdb -query [...] gnome.terminal.scrollbar:\tnever gnome.terminal.use-transparent-background:\ttrue gtk.document_font_name:\tSans 12 gtk.font_name:\tBitstream Vera Sans 12 gtk.icon_theme_name:\tPapirus-Dark gtk.monospace_font_name:\tBitstreamVeraSansMono Nerd Font 13 gtk.theme_name:\tAyu-Mirage-Dark wm.bar.background.color:\t#1F2430 [...] "},"title":"Xresourcesのオーバーライド"},"/ja/docs/howtos/stage-configs/":{"data":{"":" Xresources値を上書きしたり新しく用意したいのみであれば、設定のステージングは不必要であり推奨されません。Xresources値を上書きするには分割されたページをご覧ください。 Regolithでは様々なコンポーネントの動作や外観を決定するためにいくつもの設定ファイルを使用します。それらのファイルを直接簡単に編集することができると、あらゆるユーザーが機能アップデートを上書きする危険性のある設定を実行するでしょう。Debianのパッケージングシステムはユーザーに対し、アップデートを受けるか現在のファイルを維持するのかを訪ねますが、ユーザーがファイルの部分更新を受ける場合には意図しない影響が存在するかもしれません。Regolithは、ログイン後、ユーザーがステージした設定ファイルを探し出し、それらが存在する場合は 既定のファイルの代わりに読み込みます 。これは、ユーザーがファイルの設定をより詳細に管理できるため、ファイルを直接編集することよりも推奨されます。このページでは、これらのファイルの作成方法について解説します。\n変更したい内容によっては、i3設定ファイルの場合は独自のコピーが必要になる場合があります。Regolithの外観を変更する方法を探している場合、Xresourcesですべて解決できます。キーバインドの更新や追加、コンポーネントの入れ替えなどは、i3設定ファイルをステージする必要があるでしょう。","i3設定#i3設定":" 既定のRegolith i3設定ファイルをホームディレクトリにコピーする。 mkdir -p ~/.config/regolith3/i3 cp /etc/regolith/i3/config ~/.config/regolith3/i3/config ログアウトして戻る。Regolithセッションがユーザーがステージしたファイルを自動で認識して読み込むでしょう。 変更の確認 i3 --moreversionを実行して確認し、結果として表示された設定ファイルに注視する。作成直後であればコピーすべきです。そうしない場合は、パスが正しいことを確認してください。正確であればRegolithが~/.config/regolith3/i3/configを読み込みます。 "},"title":"設定ファイルのステージ"},"/ja/docs/reference/":{"data":{"":"このセクションには、Regolithを使用するのに役立つ参考資料が含まれています。\nKeybindings Config Files i3xrocks Xresources Release Notes "},"title":"リファレンス"},"/ja/docs/reference/configurations/":{"data":{"":"","履歴#履歴":"部分設定 Regolith 2.0では、i3が4.20になったことで部分設定のサポートが追加されます。これはincludesによって行われます。このincludesのサポートにより、Regolith 2.0がパッケージマネージャーを使用して、既定の部分設定を追加もしくは削除することができます。パッケージのインストールや削除により、 i3設定を特定の設定にカスタマイズしながら、設定を変更する必要のない部分については、上流の変更を追跡できます。\n/etc/regolith/i3/configにあるrootのRegolith設定ファイルは、部分設定を次のように読み込みます：\n/etc/regolith/i3/config# Regolithのi3のあらゆる部分設定を読み込む include /usr/share/regolith/i3/config.d/* # ユーザーのi3の部分設定を読み込む include $HOME/.config/regolith2/i3/config.d/* ","設定ファイルのクイックリファレンス#設定ファイルのクイックリファレンス":" コンポーネント 既定の設定 ユーザー設定 注意 i3 / i3-gaps /etc/regolith/i3/config, /usr/share/regolith/i3/config.d ~/.config/regolith3/i3 ユーザー設定ディレクトリでconfig.d部分設定を作成してRegolith2の設定を 拡張 するか、configを作成して 全体にオーバーライド します。詳細 Xresources /usr/share/regolith-look/default ~/.config/regolith3/Xresources ~/.Xresourcesも読み込まれますが、他のデスクトップセッションでも必要になる可能性のあるプロパティを対象にしています。詳細 バーステータスインジケーター /usr/share/i3xrocks/conf.d/ ~/.config/regolith3/i3xrocks/conf.d 各ブロックには独自の設定ファイルがありません。ファイル名のアルファベット順に読み込まれた設定です。詳細 Picom（Compton）コンポジター /etc/regolith/picom/config ~/.config/regolith3/picom/config 詳細 ~/.config/regolith3/i3/configにi3の設定ファイルを追加すると、Xresourcesやlookを含むすべてのRegolithの設定がオーバーライドされます。 "},"title":"設定ファイル"},"/ja/docs/reference/releases/":{"data":{"":"リリースノートとその他のバージョン固有のコンテンツについては、原文(英語)を参照してください。\n3.2 Release Notes 3.1 Release Notes 3.0 Release Notes 2.2 Release Notes 2.1 Release Notes 2.0 Release Notes 1.6 Release Notes 1.5.3 Release Notes 1.5.2 Release Notes 1.5.1 Release Notes 1.5 Release Notes 1.4.1 Release Notes 1.4 Release Notes 1.3.1 Release Notes 1.3 Release Notes "},"title":"リリース"},"/ja/docs/reference/xresources/":{"data":{"":"","main-xresources-keys#Main \u003ccode\u003eXresources\u003c/code\u003e keys":"","オプションのxresourcesキー#オプションの\u003ccode\u003eXresources\u003c/code\u003eキー":" Regolithバージョン3.0ではXresourceキーが\"i3-wm\"から\"wm\"に置き換えられます。このページの内容はRegolith 3.0以降のものに更新されています。それ以前のバージョンを使用する場合は、キーの名前を\"wm\"から\"i3-wm\"として使用してください。例として、Regolith 1.xと2.xではwm.foo.barはi3-wm.foo.barに変更されます。 Main Xresources keys Xresourcesキー 概要 gtk.theme_name GTKテーマ gtk.icon_theme_name GTKアイコンテーマ gnome.terminal.audible-bell gnome-terminalのベルを有効にする（true / false） gtk.document_font_name GTKドキュメントのフォント名 gtk.font_name GTKアプリとデスクトップにおける一般的な用途のフォント gtk.monospace_font_name i3barやターミナルなどのモノスペースエリアのフォント gnome.terminal.background-transparency-percent gnome-terminalの背景の透過度（0 - 100）。gnome.terminal.use-transparent-backgroundも参照。 gnome.terminal.font gnome-terminalのフォント定義 gnome.terminal.scrollbar スクロールバーの有効・無効フラグ（never / always） gnome.terminal.use-transparent-background gnome-terminalの背景の透過を有効にする（true / false）。gnome.terminal.background-transparency-percentも参照。 gnome.wallpaper GNOME壁紙（設定をオーバーライド可能) gnome.wm.theme GNOMEウィンドウマネージャーのテーマ（使用されていません） wm.alt Altキーのキーマップ。i3ユーザーガイドの概要も参照。 wm.bar.background.color バーの背景色 wm.bar.position バーの表示位置 wm.bar.separator.color ブロック間の分割線の色 wm.bar.separatorchar ブロック間に表示する字体 wm.bar.statusline.color wm.bar.trayoutput i3barのアプリトレイ有効・無効 wm.bar.workspace.active.background.color wm.bar.workspace.active.border.color wm.bar.workspace.active.text.color wm.bar.workspace.focused.background.color wm.bar.workspace.focused.border.color wm.bar.workspace.focused.text.color wm.bar.workspace.inactive.background.color wm.bar.workspace.inactive.border.color wm.bar.workspace.inactive.text.color wm.bar.workspace.urgent.background.color wm.bar.workspace.urgent.border.color wm.bar.workspace.urgent.text.color wm.client.focused.color.background wm.client.focused.color.border wm.client.focused.color.child_border wm.client.focused.color.indicator wm.client.focused.color.text wm.client.focused_inactive.color.background wm.client.focused_inactive.color.border wm.client.focused_inactive.color.child_border wm.client.focused_inactive.color.indicator wm.client.focused_inactive.color.text wm.client.unfocused.color.background wm.client.unfocused.color.border wm.client.unfocused.color.child_border wm.client.unfocused.color.indicator wm.client.unfocused.color.text wm.client.urgent.color.background wm.client.urgent.color.border wm.client.urgent.color.child_border wm.client.urgent.color.indicator wm.client.urgent.color.text wm.floatingwindow.border.size 浮遊しているウィンドウの分割線のサイズ（ピクセル） wm.font ウィンドウマネージャーのフォント wm.gaps.inner.size 既定のウィンドウ間の隙間（ピクセル） wm.gaps.outer.size 既定のスクリーンの端との隙間（ピクセル） wm.mod Superキーのキーマップ。i3ユーザーガイドの概要も参照。 wm.window.border.size 既定の分割線サイズ（ピクセル） wm.workspace.01.name .. wm.workspace.19.name ワークスペースのラベル wm.workspace.01.key .. wm.workspace.10.key ワークスペースのショートカット i3xrocks.action.volume.left インジケーター上で左クリックをしたときのコマンド（既定：なし） i3xrocks.action.volume.middle インジケーター上で中クリックをしたときのコマンド（既定：なし） i3xrocks.action.volume.right インジケーター上で右クリックをしたときのコマンド（既定：音量のミュート） i3xrocks.action.volume.scrollup 音量インジケーターで上方向にスクロールしたときのコマンド（既定：音量を上げる） i3xrocks.action.volume.scrolldn 音量インジケーターで下方向にスクロールしたときのコマンド（既定：音量を下げる） i3xrocks.error.color エラーモードにおけるバーモジュールの色 i3xrocks.label.battery0 バーアイコンの絵文字 i3xrocks.label.battery100 バーアイコンの絵文字 i3xrocks.label.battery20 バーアイコンの絵文字 i3xrocks.label.battery50 バーアイコンの絵文字 i3xrocks.label.battery80 バーアイコンの絵文字 i3xrocks.label.batteryac バーアイコンの絵文字 i3xrocks.label.batterycharging バーアイコンの絵文字 i3xrocks.label.batteryunknown バーアイコンの絵文字 i3xrocks.label.capslock バーアイコンの絵文字 i3xrocks.label.color バーアイコンの絵文字 i3xrocks.label.cpu バーアイコンの絵文字 i3xrocks.label.disk バーアイコンの絵文字 i3xrocks.label.dn バーアイコンの絵文字 i3xrocks.label.help バーアイコンの絵文字 i3xrocks.label.mediapaused バーアイコンの絵文字 i3xrocks.label.mediaplaying バーアイコンの絵文字 i3xrocks.label.memory バーアイコンの絵文字 i3xrocks.label.mute バーアイコンの絵文字 i3xrocks.label.notify.error バーアイコンの絵文字 i3xrocks.label.notify.none バーアイコンの絵文字 i3xrocks.label.notify.some バーアイコンの絵文字 i3xrocks.label.numlock バーアイコンの絵文字 i3xrocks.label.off バーアイコンの絵文字 i3xrocks.label.on バーアイコンの絵文字 i3xrocks.label.sound バーアイコンの絵文字 i3xrocks.label.thermometer バーアイコンの絵文字 i3xrocks.label.time バーアイコンの絵文字 i3xrocks.label.up バーアイコンの絵文字 i3xrocks.label.wifi バーアイコンの絵文字 i3xrocks.label.wired バーアイコンの絵文字 i3xrocks.nominal 既定のバーアイコンの色 i3xrocks.value.color バーモジュールにおける数値の色 i3xrocks.value.font バーモジュールにおける数値のフォント i3xrocks.warning バーモジュールの警告色 オプションのXresourcesキー 次のXresourcesキーは既定では未定義ですが、ユーザーは必要に応じて動作を変更するために使用できます。\nXresourcesキー 概要 wm.gaps.focus_follows_mouse 有効であればマウスの下のウィンドウをフォーカスする wm.program.launcher.app アプリランチャーキーバインドを実行するi3コマンド wm.program.launcher.cmd コマンドランチャーキーバインドを実行するi3コマンド wm.program.launcher.window ウィンドウ操作キーバインドを実行するi3コマンド wm.program.help ヘルプキーバインドを実行するコマンド wm.program.file_search ファイル検索キーバインドを実行するコマンド wm.program.refresh_ui セッションの再読み込みキーバインドを実行するコマンド wm.program.logout ログアウトキーバインドを実行するコマンド wm.program.reboot 再起動キーバインドを実行するコマンド wm.program.shutdown シャットダウンキーバインドを実行するコマンド wm.program.lock 画面ロックキーバインドを実行するコマンド wm.program.sleep スリープキーバインドを実行するコマンド wm.program.settings コントロールパネルキーバインドを実行するコマンド wm.program.display ディスプレイ設定キーバインドを実行するコマンド wm.program.wifi WiFi設定キーバインドを実行するコマンド wm.program.bluetooth Bluetooth設定キーバインドを実行するコマンド wm.program.files ファイルブラウザキーバインドを実行するコマンド wm.program.notification_ui 通知UIキーバインドを実行するコマンド wm.program.1…wm.program.3 i3と開始するオプションのプログラム i3xrocks.media-player.player-args media-playeri3xrocksブロックにおけるオプションの引数。これらの引数はplayerctlに直接与えられます。例えば、-p spotifyという値を設定すると、バーがSpotifyを表示・操作するだけになります。 i3xrocks.action.mic.left マイクステータスインジケーターで左クリック時に実行するオプションのコマンド i3xrocks.action.mic.middle マイクステータスインジケーターで中クリック時に実行するオプションのコマンド i3xrocks.action.mic.right マイクステータスインジケーターで右クリック時に実行するオーバーライドコマンド i3xrocks.action.mic.scrollup マイクステータスインジケーターで上方向にスクロール時に実行するオーバーライドコマンド i3xrocks.action.mic.scrolldn マイクステータスインジケーターで下方向にスクロール時に実行するオーバーライドコマンド i3xrocks.action.volume.left 音量ステータスインジケーターで左クリック時に実行するオプションのコマンド i3xrocks.action.volume.middle 音量ステータスインジケーターで中クリック時に実行するオプションのコマンド i3xrocks.action.volume.right 音量ステータスインジケーターで右クリック時に実行するオーバーライドコマンド i3xrocks.action.volume.scrollup 音量ステータスインジケーターで下方向にスクロール時に実行するオーバーライドコマンド i3xrocks.action.volume.scrolldn 音量ステータスインジケーターで上方向にスクロール時に実行するオーバーライドコマンド i3xrocks.action.disk-capacity ディスク容量ステータスインジケーターで実行するオーバーライドコマンド i3xrocks.action.cpu-usage CPU使用率ステータスインジケーターで実行するオーバーライドコマンド i3xrocks.action.memory メモリステータスインジケーターで実行するオーバーライドコマンド i3xrocks.action.wifi WiFiステータスインジケーターで実行するオーバーライドコマンド i3xrocks.action.weather 天気ステータスインジケーターで実行するオーバーライドコマンド i3xrocks.action.media-player.left メディアプレーヤーインジケーターを左クリック時に実行するオプションのコマンド i3xrocks.action.media-player.middle メディアプレーヤーインジケーターを中クリック時に実行するオプションのコマンド i3xrocks.action.media-player.right メディアプレーヤーインジケーターを右クリック時に実行するオーバーライドコマンド i3xrocks.action.time 日時ステータスインジケーターで実行するオーバーライドコマンド i3xrocks.action.battery バッテリーステータスインジケーターで実行するオーバーライドコマンド "},"title":"Xresources"},"/ja/docs/using-regolith/":{"data":{"":"Explore the following sections to learn how to use Regolith:\nInstall First Launch Basic Usage Configuration "},"title":"Regolithを使う"},"/ja/docs/using-regolith/basics/":{"data":{"":"","アプリケーションを閉じる#アプリケーションを閉じる":" super shift qで、フォーカスしているアプリケーションを閉じます。誤作動しているアプリの場合、 super alt qでフォーカスしているアプリケーションを強制終了(kill)することができますが、保存していないデータは失われる可能性に注意してください。","アプリケーションを開く#アプリケーションを開く":"初回ログイン後、画面下部にバーが、ダイアログにいくつかのキーボードショートカットが表示されます。このiliaと呼ばれるダイアログは、このデスクトップ環境におけるさまざまなアクションのキーバインドを見つけるアシスタントを提供します。escキーで閉じても、 super shift ?で再度表示することができます。アプリケーションを起動するには、 super spaceを押すことで、同様のダイアログが、システムにインストールされたアプリケーションとともに読み込まれます。起動したいアプリケーションの名前を入力し始めると、リストが入力したものと一致するものにフィルタリングされます。矢印キーでリストをスクロールすることもできます。","ウィンドウを操作する#ウィンドウを操作する":"実行中のアプリケーションにフォーカスするには、 super ctrl spaceキーバインドですべての実行中のウィンドウのダイアログを表示することができます。利用したいウィンドウを選択することで、簡単にそのウィンドウが含まれるワークスペースに移動してフォーカスを設定されます。","キーバインドを表示する#キーバインドを表示する":"Regolithデスクトップで使用されるすべてのキーバインドをiliaによって表示、ソート、実行することができます。このダイアログは super shift ?で起動することができます。","システムを構成する#システムを構成する":"システムアプリ（regolith-control-centerとして知られています）は、Wi−Fi・Bluetoothの設定、アプリ関連の設定、ユーザーのセットアップといった、共通の設定タスクの主要なインターフェースです。このアプリは super cキーバインドか、ランチャーのRegolith Settingsアプリから起動できます。","ターミナル#ターミナル":"ターミナルは専用のキーバインド・ super enterを持つ特別なアプリケーションです。","ファイルを検索して起動する#ファイルを検索して起動する":"特定のファイルをローカルのコンピューター上で検索には、さまざまな方法があります。Regolithでは、 super alt spaceで、素早く検索して、ファイルを既定のアプリケーションで読み込むファイル検索ダイアログを提供しています。 選択したものをEnterで入力すると、xdg-openコマンドでファイルが呼び出されます。","ブラウザ#ブラウザ":"既定のブラウザもまた特別であり、 super shift enterで起動することができます。","ワークスペースを切り替える#ワークスペースを切り替える":"アプリケーションが画面をどのように占有するかを管理する主な方法は、ワークスペースを使用することです。ワークスペースは、すべてのウィンドウが同じ仮想ディスプレイ上に存在する、0個以上のアプリケーションのグループです。ユーザーはワークスペースを切り替えて、アプリケーションが占有するための、多くのスペースを確保することができます。ウィンドウはワークスペース間を移動することができます。ワークスペースは、物理的なディスプレイに結びつけることや、必要に応じて他のディスプレイに移動することもできます。ワークスペースを切り替えるには、 superキーを押しながら数字キーを押します。これで指定したワークスペースに移動します。特定のワークスペースにウィンドウが存在する場合は、バーにアクティブであることが表示されます。このバーを参照することで、ユーザーはアクティブなウィンドウがどのワークスペースに存在しているのかを確認することができます。\nワークスペースは super tabや super shift tabでも、前方や後方のウィンドウを切り替えることができます。","新しいワークスペースを作成する#新しいワークスペースを作成する":"ワークスペース（いくつかのデスクトップ環境では\"仮想デスクトップ\"として知られています）ウィンドウを管理するための主要な方法です。各ワークスペースは、独立したウィンドウセットの画面を提供しています。ワークスペースを作成したり操作するには、 super 0-9でインデックスを指定します。","通知を管理する#通知を管理する":"Regolithデスクトップ通知システムは、ユーザーの作業を妨げる可能性のあるポップアップを防ぐように設計されています。通知は super nでiliaから表示・管理することができます。削除や通知のグループ化など、特定のキーバインドについてはhelpタブのダイアログから見つけることができます。ユーザーが現在の通知状態の表示を変更する場合、ステータスインジケーターのi3xrocks-roficationがシステムのパッケージマネージャーによってインストールされることがあります。これにより、重要な通知と通常の通知の未読件数がバーに表示されます。"},"title":"基本的な使い方"},"/ja/docs/using-regolith/configuration/":{"data":{"":"","i3の機能#i3の機能":"Regolith 2.0の開始時から、いくつかのi3の外観設定はパッケージマネージャーによって管理されています。Regolithでは、i3の設定がすべて「部分設定(config partial)」として提供されます。これらのパッケージはi3設定の一部として、/usr/share/regolith/i3/config.d以下にインストールされます。パッケージのインストールと削除をすることで、i3設定を特定の設定に合わせてカスタマイズすることができます。既定では、 regolith-desktopパッケージがインストールされたときに設定要素が依存関係としてインストールされています。\nパッケージ 機能 ファイル regolith-i3-base-launchers ブラウザとターミナルの起動 /usr/share/regolith/i3/config.d/15_base_launchers regolith-i3-default-style ウィンドウの振る舞い /usr/share/regolith/i3/config.d/40_default-style regolith-i3-navigation 操作のキーバインド /usr/share/regolith/i3/config.d/30_navigation regolith-i3-networkmanager ネットワークとWiFiの機能 /usr/share/regolith/i3/config.d/88_network-manager regolith-i3-next-workspace ワークスペースのユーティリティー /usr/share/regolith/i3/config.d/40_next-workspace regolith-i3-resize リサイズのキーバインド /usr/share/regolith/i3/config.d/50_resize-mode regolith-i3-session セッションのキーバインド /usr/share/regolith/i3/config.d/55_session_keybindings regolith-i3-unclutter マウスカーソルを使用していないときに非表示化 /usr/share/regolith/i3/config.d/86_unclutter regolith-i3-user-programs オプションでXresourcesで指定されたユーザープログラムの起動 /usr/share/regolith/i3/config.d/90_user-programs regolith-i3-workspace-config ワークスペースのキーバインド /usr/share/regolith/i3/config.d/40_workspace-config ソフトの依存関係は、それに依存するパッケージを削除することなく削除できます。これはリストにあるいくつかのパッケージを削除できることを示しています。ユーザーは、デフォルトの設定部分を独自のバージョンに置き換えることで、より安定した方法で設定を微調整できます。これはカスタマイズしたい部分を~/.config/regolith3/i3/config.d/にコピーして、aptで/usr/share/regolith/i3/config.dのオリジナルのファイルを削除することでできます。この方法により、変更されていない設定部分は、ユーザー固有の設定に影響を与えることなく更新やバグ修正を取得し続けることができます。\n参考例はi3設定のカスタマイズのハウツーを参照してください。\nすべてのi3設定パッケージ ここに記載されているすべてのi3設定パッケージはRegolith 2.1で利用できます。\nパッケージ 機能 ファイル regolith-i3-base-launchers ターミナルとブラウザを起動 /usr/share/regolith/i3/config.d/15_base_launchers regolith-i3-compositor コンポジターの統合（regolith-compositor-\u003cvariant\u003eへ転送） /usr/share/regolith/i3/config.d/80_compositor regolith-i3-default-style ウィンドウの振る舞い /usr/share/regolith/i3/config.d/40_default-style regolith-i3-ftue 最初のユーザーエクスペリエンス /usr/share/regolith/i3/config.d/84_ftue regolith-i3-gaps-partial i3-gaps設定 （インストールした場合i3がi3-gapsに置き換えられます） /usr/share/regolith/i3/config.d/35_i3-gaps regolith-i3-gnome Regolith設定のキーバインド /usr/share/regolith/i3/config.d/60_config_keybindings regolith-i3-i3xrocks i3バーのステータスインジケーターの設定 /usr/share/regolith/i3/config.d/70_bar regolith-i3-ilia iliaの統合 /usr/share/regolith/i3/config.d/20_ilia regolith-i3-navigation 操作のキーバインド /usr/share/regolith/i3/config.d/30_navigation regolith-i3-networkmanager ネットワークとWiFiの機能 /usr/share/regolith/i3/config.d/88_network-manager regolith-i3-next-workspace ワークスペースのユーティリティー /usr/share/regolith/i3/config.d/40_next-workspace regolith-i3-remontoire 古いキーバインドビューとの統合 /usr/share/regolith/i3/config.d/45_remontoire regolith-i3-resize リサイズのキーバインド /usr/share/regolith/i3/config.d/50_resize-mode regolith-i3-rofi 古いデスクトップランチャーとの統合 /usr/share/regolith/i3/config.d/20_rofi regolith-i3-rofication 古い通知ビューワーとの統合 /usr/share/regolith/i3/config.d/82_rofication regolith-i3-rofication-ilia 通知ビューワーとの統合 /usr/share/regolith/i3/config.d/82_rofication-ilia regolith-i3-session セッションのキーバインド /usr/share/regolith/i3/config.d/55_session_keybindings regolith-i3-snapshot i3ワークスペースの固定 /usr/share/regolith/i3/config.d/75_i3-snapshot regolith-i3-swap-focus 最後にフォーカスしたウィンドウへの切り替え /usr/share/regolith/i3/config.d/40_i3-swap-focus regolith-i3-unclutter マウスを使用していないときに非表示化 /usr/share/regolith/i3/config.d/86_unclutter regolith-i3-user-programs オプションでXresourcesで指定されたユーザープログラムの起動 /usr/share/regolith/i3/config.d/90_user-programs regolith-i3-workspace-config ワークスペースのキーバインド /usr/share/regolith/i3/config.d/40_workspace-config ","recommended-packages-for-new-users#新規ユーザーに推奨されるパッケージ":"新規ユーザーに推奨されるパッケージ 外観 Regolith公式の外観をすべてインストールする:\nsudo apt install regolith-look-* もしくは、aptでインストールされて利用可能な外観のリストを表示する:\napt list | grep regolith-look- 注意：これはフォントやテーマ、壁紙も含みます。ディスクの使用率の最小化を望むユーザーは、使用していない外観をアンインストールすることを推奨します。\n外観の選択方法の概要については、以下の項目を参照してください。\nステータスインジケーター 次の行では、新規ユーザーに推奨されるステータスインジケータパッケージをインストールします。\nsudo apt install i3xrocks-focused-window-name i3xrocks-rofication i3xrocks-info i3xrocks-app-launcher i3xrocks-memory これらのインジケーターを後から削除したいときは、システムからアンインストールします。例：\nsudo apt remove i3xrocks-info ラップトップのバッテリー状態 ラップトップの現在のバッテリー状態を表示するには：\nsudo apt install i3xrocks-battery コンポジター コンポジターはウィンドウ環境に仮想エフェクトを追加します。既定では、Regolith 3にはpicomコンポジターがインストールされています。特定のハードウェアやドライバの制限によってグラフィックの問題が発生した場合、変わりに次のコンポジターをインストールする必要があります。\nパッケージ 注意 regolith-compositor-picom-glx 既定 regolith-compositor-compton-glx 古いコンポジターであり、いくつかのハードウェアでよりよく動作する場合があります regolith-compositor-xcompmgr 古いコンポジターであり、いくつかのハードウェアでよりよく動作する場合があります regolith-compositor-none パススルーパッケージであり、コンポジターは実行されません 詳細な概要は、このハウツーを参照してください。","さらに深く読み込む#さらに深く読み込む":"もっと深く知りたい人は、このハウツーを利用したり、Xresourcesリファレンスを読みましょう。 ユーザーガイド（英語）を読んでi3のパワーユーザーになりましょう。\nもしXresourcesが提供する以上の高度な設定が必要な場合は、設定ファイルのステージングで見つけたi3設定のハウツーを利用してください。","キーバインド#キーバインド":" Regolithバージョン3.0ではXresourceキーが\"i3-wm\"から\"wm\"に置き換えられます。このページの内容はRegolith 3.0以降のものに更新されています。それ以前のバージョンを使用する場合は、キーの名前を\"wm\"から\"i3-wm\"として使用してください。例として、Regolith 1.xと2.xではwm.foo.barはi3-wm.foo.barに変更されます。 もっとも重要なキーバインドの変更は superキーです。Regolithは、さまざまなUIコンポーネントで読み取られる設定の真の正規ソースとしてXresourcesを利用できます。ユーザー設定で利用可能なXresourcesキーのリストは、ここから参照することができます。既定の superバインドを\"windows\"キーから\"alt\"に変更するには~/.config/regolith3/Xresourcesに以下の行を追加します。\n~/.config/regolith3/Xresourceswm.mod: Mod1 wm.alt: Mod4 注意：GNOMEには独自のキーバインドも存在します。Regolithセッションが最初に初期化されると、 競合するGNOMEキーバインドがユーザー設定から削除されます。GNOMEのキーバインドは、Regolithの設定アプリから管理することができます。","システム管理#システム管理":"regolith-control-centerアプリは、言語、日付、ディスプレイ、ネットワークや他のさまざまな種類の設定ツールです。 super spaceでアプリランチャーを開いてsettingsと入力し、起動したいアプリをヒットさせることで起動します。 super cは直接実行できるキーバインドです。regolith-control-centerとターミナルに入力することでもアプリケーションを起動することができます。","ステータスバーのインジケーター#ステータスバーのインジケーター":"CPUの読み込み、日付、時間、通知、天気や他のシステム情報などのステータスインジケーターは、パッケージのインストールで追加や削除をすることが可能です。例えば、ラップトップバッテリーのステータスインジケーターを表示するには、sudo apt install i3xrocks-batteryを実行して、セッションをregolith-look refreshで再読み込みするだけです。利用可能なインジケーターを探すには、apt search ^i3xrocks-を実行するか、SynapticのようなGUIのパッケージマネージャーでi3xrocks-と検索して見つけることができます。「ブロックレット(blocklet)」と呼ばれる、ステータスインジケーターを設定するのに利用可能なドキュメントが存在します。以下は、Regolith 2.2時点でのステータスインジケーターのリストです。\nパッケージ ステータスの機能 i3xrocks-app-launcher アプリ起動ダイアログのショートカット i3xrocks-battery バッテリーの状態 i3xrocks-bluetooth Bluetoothの状態 i3xrocks-cpu-usage CPU使用率 i3xrocks-disk-capacity ディスク使用率 i3xrocks-focused-window-name フォーカスされたウィンドウのタイトル i3xrocks-info キーバインドビューワーのショートカット i3xrocks-key-indicator キーボード切り替えの状態 i3xrocks-keyboard-layout キーボードレイアウト i3xrocks-media-player メディアプレーヤーの状態 i3xrocks-memory メモリ使用率 i3xrocks-microphone マイクの状態 i3xrocks-net-traffic ネットワークの状態 i3xrocks-next-workspace 新規ワークスペース作成のショートカット i3xrocks-nm-vpn VPNの状態 i3xrocks-openvpn OpenVPNの状態 i3xrocks-rofication 通知の状態 i3xrocks-tailscale Tailscale status i3xrocks-temp システムの温度 i3xrocks-time システム時間 i3xrocks-updates システムパッケージの状態 i3xrocks-volume 音量の状態 i3xrocks-weather 地域の天気 i3xrocks-wifi 接続中のWiFiアクセスポイント名 ","壁紙#壁紙":"多くのRegolithの外観は、既定のデスクトップカラーと画像を提供します。壁紙はXressourcesキー・regolith.wallpaper.fileに壁紙画像のパスを指定することで設定することができます。\n例として、/usr/share/backgrounds/hardy_wallpaper_uhd.pngファイルが存在すると仮定したとき：\necho \"regolith.wallpaper.file: /usr/share/backgrounds/hardy_wallpaper_uhd.png\" \u003e\u003e ~/.config/regolith3/Xresources regolith-look refresh 上記のコマンドでは、前述のプロパティを使用するときに他のパスから/usr/share/backgrounds/hardy_wallpaper_uhd.pngに変更されます。\n壁紙画像の表示形式（拡大、大きさ、など…）を変更するには、regolith.wallpaper.optionsを設定します。オプション：none, wallpaper, centered, scaled, stretched, zoom, spanned\n例：\necho \"regolith.wallpaper.options: zoom\" \u003e\u003e ~/.config/regolith3/Xresources regolith-look refresh Xresourceキー・regolith.wallpaper.color.primaryを使用して、画像ではなく色を指定するには：\necho \"regolith.wallpaper.file: \" \u003e\u003e ~/.config/regolith3/Xresources echo \"regolith.wallpaper.color.primary: blue\" \u003e\u003e ~/.config/regolith3/Xresources regolith-look refresh 2つ目の色とグラデーションを指定するには：\necho \"regolith.wallpaper.file: \" \u003e\u003e ~/.config/regolith3/Xresources echo \"regolith.wallpaper.color.primary: blue\" \u003e\u003e ~/.config/regolith3/Xresources echo \"regolith.wallpaper.color.secondary: green\" \u003e\u003e ~/.config/regolith3/Xresources echo \"regolith.wallpaper.color.shading.type: vertical\" \u003e\u003e ~/.config/regolith3/Xresources regolith-look refresh ロック画面の壁紙 ロック画面壁紙はデスクトップ壁紙と同じ方法で管理することができます。キーはデスクトップ壁紙と似たようなものですが、regolith.lockscreen.wallpaper...のように、lockscreenをwallpaperの前に追加します。例えば、ロック画面の画像を指定する場合：\necho \"regolith.lockscreen.wallpaper.file: /usr/share/backgrounds/hardy_wallpaper_uhd.png\" \u003e\u003e ~/.config/regolith3/Xresources regolith-look refresh 壁紙の処理を無効化 Regolithの外部で壁紙を管理したい場合、壁紙画像と色の値を空にします。\necho \"regolith.wallpaper.file: \" \u003e\u003e ~/.config/regolith3/Xresources echo \"regolith.wallpaper.color.primary: \" \u003e\u003e ~/.config/regolith3/Xresources ","外観-1#外観":"色、壁紙、ウィンドウとバーのレイアウトや他の視覚的要素はRegolithにバンドルされ、“外観(look)“と呼ばれています。外観は、デスクトップの全体の外観を変更する簡単な方法を提供します。ステータスバーのインジケーターのような外観はパッケージ化され、他のソフトウェアのようにインストールしたりアンインストールしたりすることができます。外観パッケージは命名フォーマットに従いregolith-look-\u003cname\u003eとなっています。aptやGUIパッケージマネージャーから利用可能な外観を検索することができます。 super alt lキーバインドで、ダイアログからインストールされた外観を選択します。\nまた、ターミナルのコマンド・regolith-lookで外観を変更したり、選択した外観でアクティブなセッションを再読み込みすることができます。ここでは例として、gruvboxの外観に切り替えます。\n$ apt search ^regolith-look- [...] regolith-look-gruvbox/unknown,now 0.4.6-1regolith amd64 [...] $ sudo apt install regolith-look-gruvbox regolith-look set gruvbox regolith-look refresh 利用可能な外観をすべてインストールする簡単な方法：\nsudo apt install regolith-look-* "},"title":"設定"},"/ja/docs/using-regolith/first-launch/":{"data":{"":"Regolithの既定のインターフェースは、アプリケーションの起動方法やその他の一般的なタスクの実行方法に関する視覚的なヒントがありません。これは、初めて使う人にとって少し混乱するかもしれません。しかし、Regolithのインターフェースを使っていくときは、次の2つのキーバインドを記憶しておけば、比較的簡単に利用できるようになります。\nアクション キーバインド 動き キーバインドビューワー super shift ? 利用可能なキーバインドの表示・実行 アプリランチャー super space デスクトップアプリケーションの起動 上記のキーバインドのどちらかを入力すると、フォーカスされたモニターにランチャーダイアログがポップアップで表示されます。ダイアログはどちらも共通のインターフェースを持っています。\niliaと呼ばれるプログラムによるインターフェースの上部にはテキストを入力するウィジェット、下部にリスト選択のウィジェットがあります。これらのダイアログに共通する使用パターンは、表示されたリストからアイテムを選択することです。テキストを入力して選択項目をフィルタリングし、矢印キーを使用して選択します。 enterを押すと、選択されたアイテムが実行されます。キーバインドの場合、選択したキーバインドが手動で実行されることになります。アプリの場合、選択されたアプリケーションが起動します。","superキー#Superキー":"Regolithにおいて多くのキーバインドで使われるのが superキーです。このキーは\"WIN\"と書かれていたりMS Windowsのロゴが書かれていることがあります。MacではCommand ⌘キーを示します。今後このキーは superと呼ばれますが、あなたの必要に応じて物理ボタンの superマップ変更できることに注意してください。","アプリケーションランチャー#アプリケーションランチャー":"\nデスクトップ環境の基本的なタスクは、ユーザーがアプリケーションを起動できるようにすることです。Regolithでは、アプリランチャーによっておこなわれます。キーバインドと同様、ダイアログは初めに、利用可能なデスクトップアプリケーションをすべて表示します。テキストを入力して選択項目をフィルタリングし、矢印キーを使用して特定のアイテムを選択します。 enterを押すことで選択されたアプリケーションが起動します。","キーバインドビューワー#キーバインドビューワー":"\nキーバインドビューワーの目的は、Regolithのキーバインドを素早く、簡単に見つけて学ぶことです。キーバインドのリファレンスはこのサイト上でも利用可能ですが、ビューワーのほうが素早くダイアログを表示してアクションを検索して探し出すことができます。見つけたら、キーボードを使用するか、ダイアログでアイテムを選択して、キーバインドを実行することができます。","次のステップ#次のステップ":"基本的な使い方のページでは、Regolithのインターフェースについて詳しく知ることができます。"},"title":"初回起動"},"/ja/docs/using-regolith/install/":{"data":{"":"","regolith-apt-urlパスの構造#Regolith \u003ccode\u003eapt\u003c/code\u003e URLパスの構造":"Upgrading to 3.x 以前のバージョンのRegolithからアップグレードする場合はリリースノート を、特に2.xからの場合は移行ガイドを参照してください。\nサポートするOS 以下は、Regolithデスクトップのインストールを取り扱っている特定のLinuxベースのOSごとに分割されています。\nUbuntu Ubuntu 24.04Ubuntu 22.04 Regolithはシステムパッケージとしてインストールすることができます。これは簡単に更新や削除ができ、一貫することができます。 下記のステップでは、Regolithのパッケージリポジトリからパッケージを読み込み可能にして、デスクトップパッケージをインストールできるようにシステムを設定する方法について記しています。\nローカルのaptにRegolithの公開鍵を登録する。\nwget -qO - https://regolith-desktop.org/regolith.key | \\ gpg --dearmor | sudo tee /usr/share/keyrings/regolith-archive-keyring.gpg \u003e /dev/null ローカルのaptにリポジトリのURLを追加する。\necho deb \"[arch=amd64 signed-by=/usr/share/keyrings/regolith-archive-keyring.gpg] \\ https://regolith-desktop.org/release-3_2-ubuntu-noble-amd64 noble main\" | \\ sudo tee /etc/apt/sources.list.d/regolith.list aptを更新してRegolithをインストールする。\nsudo apt update sudo apt install regolith-desktop regolith-session-flashback regolith-look-lascaille システムを再起動する。\nログインマネージャーは新しいデスクトップセッションを識別するため、再起動が必要になります。システムの再起動はログインマネージャーを再起動するための簡単な方法です。\nARMベースのシステムにインストールするときは、上記の内容から2箇所のamd64をarm64に置き換えてください。 Regolithはシステムパッケージとしてインストールすることができます。これは簡単に更新や削除ができ、一貫することができます。 下記のステップでは、Regolithのパッケージリポジトリからパッケージを読み込み可能にして、デスクトップパッケージをインストールできるようにシステムを設定する方法について記しています(こちらでダウンロード可能なスクリプトが利用できます)。\nローカルのaptにRegolithの公開鍵を登録する。\nwget -qO - https://regolith-desktop.org/regolith.key | \\ gpg --dearmor | sudo tee /usr/share/keyrings/regolith-archive-keyring.gpg \u003e /dev/null ローカルのaptにリポジトリのURLを追加する。\necho deb \"[arch=amd64 signed-by=/usr/share/keyrings/regolith-archive-keyring.gpg] \\ https://regolith-desktop.org/release-3_2-ubuntu-jammy-amd64 jammy main\" | \\ sudo tee /etc/apt/sources.list.d/regolith.list aptを更新してRegolithをインストールする。\nsudo apt update sudo apt install regolith-desktop regolith-session-flashback regolith-look-lascaille システムを再起動する。\nログインマネージャーは新しいデスクトップセッションを識別するため、再起動が必要になります。システムの再起動はログインマネージャーを再起動するための簡単な方法です。\nARMベースのシステムにインストールするときは、上記の内容から2箇所のamd64をarm64に置き換えてください。 Debian Debian TestingDebian Bookworm “Testing\"リリースのDebianユーザーであれば、Regolithをインストールすることができますが、Debian Testingの性質上\"release\"バージョンは存在しません。Debian TestingインスタンスにRegolithをインストールするには、aptコマンドのワンライナーのreleaseの代わりにtestingを含める必要があります。例：\necho deb \"[arch=amd64 signed-by=/usr/share/keyrings/regolith-archive-keyring.gpg] \\ https://regolith-desktop.org/testing-debian-testing-amd64 testing main\" | \\ sudo tee /etc/apt/sources.list.d/regolith.list それ以外のインストールの手順はDebian公式リリースと同じです。壊れた依存関係やコンポーネントと時々遭遇することに注意してください。安定性が必要である場合は、DebianやUbuntuの公式リリースにインストールすることを検討してください。\nRegolithはシステムパッケージとしてインストールすることができます。これは簡単に更新や削除ができ、一貫することができます。 下記のステップでは、Regolithのパッケージリポジトリからパッケージを読み込み可能にして、デスクトップパッケージをインストールできるようにシステムを設定する方法について記しています(こちらでダウンロード可能なスクリプトが利用できます)。\nローカルのaptにRegolithの公開鍵を登録する。\nwget -qO - https://regolith-desktop.org/regolith.key | \\ gpg --dearmor | sudo tee /usr/share/keyrings/regolith-archive-keyring.gpg \u003e /dev/null ローカルのaptにリポジトリのURLを追加する。\necho deb \"[arch=amd64 signed-by=/usr/share/keyrings/regolith-archive-keyring.gpg] \\ https://regolith-desktop.org/release-3_2-debian-bookworm-amd64 bookworm main\" | \\ sudo tee /etc/apt/sources.list.d/regolith.list aptを更新してRegolithをインストールする。\nsudo apt update sudo apt install regolith-desktop regolith-session-flashback regolith-look-lascaille システムを再起動する。\nログインマネージャーは新しいデスクトップセッションを識別するため、再起動が必要になります。システムの再起動はログインマネージャーを再起動するための簡単な方法です。\nARMベースのシステムにインストールするときは、上記の内容から2箇所のamd64をarm64に置き換えてください。 regolith-desktopパッケージは、多くのハードウェアで動作する必要最小限の設定でインストールします。追加で高級なパッケージやもっと便利な環境を追加するには、新規ユーザーに推奨されるパッケージを参照してください。 regolith-compositor-picom-glxコンポジターは多くのコンピューターで動作します。もしドライバや視覚的な問題に遭遇した場合は、他のコンポジターをお試しください。 インストール時に選択するパッケージ Regolith 3.0では、複数のセッション(X11: regolith-session-flashback, Wayland: regolith-session-sway)から選択することができるようになりました。このため、Regolith 3.0をインストールするときは、使用するセッションを一方か両方を指定します。さらに、Regolith 3.0からはインストール時にRegolithの外観を指定できるようになったことで、後で設定する必要があるセットアップが節約されます。DebianベースのシステムのX11で推奨される基本的なインストールは以下の通りです。\nsudo apt install regolith-desktop regolith-session-flashback regolith-look-lascaille # ^-- ﾍﾞｰｽ ﾊﾟｯｹｰｼﾞ ^-- ｾｯｼｮﾝ ^ -- 外観 セッションについて、次の内の一方か両方を選ぶことができます：regolith-session-flashback (X11), regolith-session-sway (Wayland) 外観について、次の外観パッケージから1つを選ぶことができます。 regolith-look-ayu-dark regolith-look-ayu-mirage regolith-look-ayu regolith-look-blackhole regolith-look-default-loader regolith-look-default regolith-look-dracula regolith-look-gruvbox regolith-look-i3-default regolith-look-lascaille regolith-look-nevil regolith-look-nord regolith-look-solarized-dark 上記の推奨事項の例と代替案として、ここでは、Swayセッションに外観\"Nord\"を適用してインストールするaptコマンドを紹介します。\nsudo apt install regolith-desktop regolith-session-sway regolith-look-nord Regolith apt URLパスの構造 https://regolith-desktop.org/testing-debian-testing-amd64 | | | | | | | * アーキテクチャ | | * ディストロバージョン/コードネーム | * ディストロ名 * Regolithの段階 Regolithの段階 段階 URLの文字列 概要 実験的 experimental 実験的内容をテストする段階 不安定 unstable 開発内容の初期テスト段階 テスト testing 開発内容の後期テスト段階 リリース X.Y release-X_Y 特定の公式リリース段階 現在のリリース release-current 最新のリリース段階（リリース間で変動します） ディストロ名 名前 概要 ubuntu Ubuntu Linuxディストリビューション debian Debian Linuxディストリビューション ディストロバージョン/コードネーム これらのラベルは各上流コミュニティによって決定されます。例：noble, bookworm, focal\nアーキテクチャ 名前 概要 amd64 64-bit x86アーキテクチャ arm64 64-bit Armアーキテクチャ 例 概要 URL amd64のUbuntu 22.04で3.2リリースのRegolithを使用する https://regolith-desktop.org/release-3_2-ubuntu-jammy-amd64 amd64のDebian 12で最新リリースのRegolithを使用する https://regolith-desktop.org/release-current-debian-bookworm-amd64 arm64のDebian TestingでRegolithのテストリポジトリを使用する https://regolith-desktop.org/testing-debian-testing-arm64 ","upgrading-to-3x#Upgrading to 3.x":"","インストール時に選択するパッケージ#インストール時に選択するパッケージ":"","サポートするos#サポートするOS":"","リリースの変更ポリシー#リリースの変更ポリシー":"Regolith 3.2以降では、すべてのリリースにおいて、パッケージリポジトリのURLに一意の名前が使用されます。これは、ユーザーが、新しいリリースにアップグレードするタイミングを完全に制御できることを意味します。パッケージマネージャーに常に最新版をインストールしてほしいユーザーには、release-current という特別な段階が提供されています。"},"title":"インストール"}}